{"version":3,"file":"component---src-pages-ar-slanted-6-mdx-276baa6e2c137f0f1cb4.js","mappings":"6OAOaA,EAAe,GACtBC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,UAKT,iBAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,uDACA,iCACA,yDACA,6HACE,sBAAYC,WAAW,KAAvB,oBADF,8BAEA,yHACF,sBAAYA,WAAW,KAAvB,oBADE,8GAOJJ,EAAWK,gBAAiB,G,qBC7Bb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://portfolio/./src/pages/arSlanted6.mdx","webpack://portfolio/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <title>Augmented Reality | Portfolio</title>\n    <h5>{`Problem #3`}</h5>\n    <h6>{`Not every browser is created equal`}</h6>\n    <p>{`On mobile it didn't work well with every browser, so I had to find a workaround for browsers where\nthe `}<inlineCode parentName=\"p\">{`AR functionality`}</inlineCode>{` didn't work as expected.`}</p>\n    <p>{`The solution of this problem was quite easy. Browsers where it didn't work well just don't use the\n`}<inlineCode parentName=\"p\">{`AR functionality`}</inlineCode>{`. Instead they show a fallback page where the user can select the image from the\nmagazine by it's title.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}