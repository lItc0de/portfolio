{"version":3,"file":"component---src-pages-ar-slanted-6-tsx-c09fce61ee3ded30a477.js","mappings":"yJAeMA,G,gBAA2B,SAAC,GAAD,IAC/BC,EAD+B,EAC/BA,SAAkCC,GADH,EACrBC,SADqB,EACXC,aADW,EACGF,WADH,OAG/BG,EAAAA,cAAAA,OAAAA,CAAMH,UAAcA,EAAAA,4BACjBD,KAOLD,EAAQM,aAfoB,CAC1BJ,UAAW,IAgBb,S,+HCpBMK,EAAc,CAClBC,aAF0B,IAKb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,QALS,UAKT,iBAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,uCACA,sEAAwD,aAAGC,WAAW,IAClE,KAAQ,6BAD4C,YAAxD,8BAGqB,aAAGA,WAAW,IAC/B,KAAQ,2CADS,SAHrB,4CAMgB,kBAAQA,WAAW,KAAnB,qBANhB,uCAM4G,kBAAQA,WAAW,KAAnB,kBAN5G,OAOF,kBAAQA,WAAW,KAAnB,qBAPE,SAO4D,kBAAQA,WAAW,KAAnB,mBAP5D,MAQA,wDAA0C,kBAAQA,WAAW,KAAnB,mBAA1C,+DACQ,kBAAQA,WAAW,KAAnB,WADR,4FAGA,+CAAiC,kBAAQA,WAAW,KAAnB,WAAjC,iMAOJJ,EAAWK,gBAAiB,EC/B5B,IAMA,EAN4B,kBAC1BT,EAAAA,cAACL,EAAAA,EAAD,CAASG,SAAS,eAAeC,aAAa,QAC5CC,EAAAA,cAACU,EAAD,S,qBCPW,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,E","sources":["webpack://portfolio/./src/components/content.tsx","webpack://portfolio/./src/markdown/arSlanted/arSlanted6.mdx","webpack://portfolio/./src/pages/arSlanted6.tsx","webpack://portfolio/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from 'react';\nimport * as styles from './content.css';\n\nimport NextPageLink from './nextPageLink';\n\ntype Props = {\n  nextPage: string;\n  nextPageText: string;\n  className?: string;\n}\n\nconst defaultProps: Props = {\n  className: '',\n} as Props;\n\nconst Content: React.FC<Props> = ({\n  children, nextPage, nextPageText, className,\n}) => (\n  <main className={`${className} ${styles.content}`}>\n    {children}\n    {/* <NextPageLink to={nextPage} className={styles.nextPageLink}>\n      {nextPageText}\n    </NextPageLink> */}\n  </main>\n);\n\nContent.defaultProps = defaultProps;\n\nexport default Content;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h5>{`Technology used:`}</h5>\n    <p>{`The base is a simple static website created with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.com/\"\n      }}>{`gatsbyjs`}</a>{`.\nOn top of it I'm using `}<a parentName=\"p\" {...{\n        \"href\": \"https://ar-js-org.github.io/AR.js-Docs/\"\n      }}>{`AR.js`}</a>{`, which is a library\ndesigned to bring `}<strong parentName=\"p\">{`augmented reality`}</strong>{` to the web. It's features include `}<strong parentName=\"p\">{`image tracking`}</strong>{`,\n`}<strong parentName=\"p\">{`location based AR`}</strong>{` and `}<strong parentName=\"p\">{`marker tracking`}</strong>{`.`}</p>\n    <p>{`For this usecase I was picking the `}<strong parentName=\"p\">{`marker tracking`}</strong>{` functionality because with that it is possible\nto create `}<strong parentName=\"p\">{`markers`}</strong>{` for many different images and then show content when thy are detected by the\nlibrary.`}</p>\n    <p>{`The idea itself, creating `}<strong parentName=\"p\">{`markers`}</strong>{` for images, load them into the library and show content based on\nwhat was found, sounds pretty easy, but there have been some problems to solve which I will explain\nover the next pages.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\n\nimport Content from '../components/content';\nimport Markdown from '../markdown/arSlanted/arSlanted6.mdx';\n\nconst ArSlanted: React.FC = () => (\n  <Content nextPage=\"/arSlanted7/\" nextPageText=\"Next\">\n    <Markdown />\n  </Content>\n);\n\nexport default ArSlanted;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Content","children","className","nextPage","nextPageText","React","defaultProps","layoutProps","_frontmatter","MDXContent","components","props","mdxType","parentName","isMDXComponent","Markdown","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}